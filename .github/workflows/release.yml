# This workflow will release the latest tag of Retro Carnage.
#
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Release

on:  
  push:
    tags:
      - 'v[0-9]+.[0-9]+'

jobs:

  release-for-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.x'
    - name: Make the script files executable
      run: chmod +x ./upload-release.sh
    - name: Install dev libraries
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y libgl1-mesa-dev xorg-dev libasound2-dev lftp
    - name: Install dependencies
      run: go get -d .
    - name: Build
      run: go build -v
    - name: Download assets      
      shell: bash
      run: |  
        git clone --depth 1 --branch ${{ github.ref_name }} https://github.com/Retro-Carnage-Team/retro-carnage-assets.git /tmp/${{ github.ref_name }}
        rm -rf /tmp/${{ github.ref_name }}/.git
    - name: Copy binary
      run: mv ./retro-carnage /tmp/${{ github.ref_name }}/
    - name: Build release archive
      shell: bash
      run: |
        cd /tmp
        mkdir /tmp/rc-upload
        mkdir /tmp/rc-upload/releases
        zip -r -9 /tmp/rc-upload/releases/Retro-Carnage-Linux.zip ./${{ github.ref_name }}
        curl -o /tmp/rc-upload/releases/Retro-Carnage-Code.zip https://codeload.github.com/Retro-Carnage-Team/retro-carnage/zip/refs/tags/${{ github.ref_name }}
        cd -
    - name: Upload release archive
      run: ./upload-release.sh ${{vars.FTP_HOST}} ${{secrets.FTP_USER}} ${{secrets.FTP_PASS}}
  
  release-for-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.x'
    - name: Install dependencies
      run: |
        go install github.com/tc-hib/go-winres@latest  
        go get -d . 
    - name: Build
      run: |
        go-winres simply --icon icon.png --manifest gui
        go build -v
    - name: Build release archive
      shell: pwsh
      run: |   
        git clone --depth 1 --branch ${{ github.ref_name }} https://github.com/Retro-Carnage-Team/retro-carnage-assets.git ${{ github.ref_name }}        
        Copy-Item -Path .\retro-carnage.exe -Destination ${{ github.ref_name }}
        New-Item -Name "archive" -ItemType "directory"
        Compress-Archive -Path ${{ github.ref_name }} -DestinationPath "archive\Retro-Carnage-Windows.zip"
    - name: Upload release archive
      uses: Dylan700/sftp-upload-action@latest
      with:
        server: ${{vars.FTP_HOST_NAME}}
        username: ${{secrets.FTP_USER}}
        password: ${{secrets.FTP_PASS}}
        port: 22
        uploads: |
          ./archive/ => ./releases/
